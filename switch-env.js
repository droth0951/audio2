#!/usr/bin/env node
/**
 * Environment Switching Script for Audio2 Local Development
 * Usage: node switch-env.js [development|production|local]
 */

const fs = require('fs');
const path = require('path');

const envPath = path.join(__dirname, '.env');
const developmentEnvPath = path.join(__dirname, '.env.development');
const productionEnvPath = path.join(__dirname, '.env.production');

// Environment configurations
const environments = {
  development: 'http://localhost:3001',
  local: 'http://localhost:3001', // alias for development
  production: 'https://audio-trimmer-service-production.up.railway.app',
  amusing: 'https://amusing-education-production.up.railway.app'
};

// Get command line argument
const targetEnv = process.argv[2];

if (!targetEnv) {
  console.log('üéõÔ∏è  Audio2 Environment Switcher');
  console.log('');
  console.log('Usage: node switch-env.js [environment]');
  console.log('');
  console.log('Available environments:');
  Object.entries(environments).forEach(([name, url]) => {
    console.log(`  ${name}: ${url}`);
  });
  console.log('');
  console.log('Examples:');
  console.log('  node switch-env.js development  # Use local server (instant caption testing)');
  console.log('  node switch-env.js production   # Use stable Railway production');
  console.log('  node switch-env.js amusing      # Use amusing-education Railway');
  process.exit(0);
}

if (!environments[targetEnv]) {
  console.log(`‚ùå Unknown environment: ${targetEnv}`);
  console.log(`Available: ${Object.keys(environments).join(', ')}`);
  process.exit(1);
}

// Create .env file pointing to the target environment
const envContent = `# Auto-generated by switch-env.js
# Current environment: ${targetEnv}
EXPO_PUBLIC_CAPTION_PROXY_BASE=${environments[targetEnv]}
`;

try {
  fs.writeFileSync(envPath, envContent);
  console.log(`‚úÖ Switched to ${targetEnv} environment`);
  console.log(`üì° API Base URL: ${environments[targetEnv]}`);

  if (targetEnv === 'development' || targetEnv === 'local') {
    console.log('');
    console.log('üöÄ For local development:');
    console.log('  1. Start server: cd audio-trimmer-server && npm run dev');
    console.log('  2. Start app: npx expo start');
    console.log('  3. Make caption changes and test instantly!');
  } else {
    console.log('');
    console.log('üì± Ready to use Railway production server');
    console.log('  Run: npx expo start');
  }

} catch (error) {
  console.log(`‚ùå Failed to switch environment: ${error.message}`);
  process.exit(1);
}